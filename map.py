import libtcodpy as libtcod
from mapmaking import *
import actors

# Map size.
MAP_WIDTH = 100
MAP_HEIGHT = 80


def new_level(levelnum):
    level = FullMap(MAP_WIDTH, MAP_HEIGHT, levelnum, 0.42)
    return level

def new_map(game):
    map = game.level.finalize_map()
    game.map_width = MAP_WIDTH
    game.map_height = MAP_HEIGHT
    return map
   
#def get_rooms(factory):
 #   rooms = factory.get_rooms()
  #  return rooms
   
# Place the player in one of the rooms generated by the cave factory.
def initial_place_player(game):
    while True:
        rooms = game.level.get_rooms()
        numrooms = len(game.level.get_rooms())-1
        #print numrooms
        room = rooms[libtcod.random_get_int(0, 0, numrooms)]
    
        x = libtcod.random_get_int(0, room.x1+1, room.x2-1)
        y = libtcod.random_get_int(0, room.y1+1, room.y2-1)

        if not game.map[x][y].blocked:
            game.player.x = x
            game.player.y = y
            break


# An FOV map built using a provided map.
def new_fov_map(game):
    width = game.map_width
    height = game.map_height
    fov_map = libtcod.map_new(width, height)
    for y in range(height):
        for x in range(width):
            libtcod.map_set_properties(fov_map, x, y, not game.map[x][y].block_sight, not game.map[x][y].blocked)
    return fov_map


# An internal check for whether a map tile is blocked (by a wall)
def is_blocked(map, x, y):
    # first test the map tile
    if map[x][y].blocked:
        return True
    return False